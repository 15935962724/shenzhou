<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd" default-autowire="byName"> 
 
  	<!-- 配置 JedisPoolConfig 实例 -->
	 <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
	  <property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>
	  <property name="testOnBorrow" value="${redis.testOnBorrow}"></property> 
	  <property name="testOnReturn" value="${redis.testOnReturn}"></property> 
	  <property name="maxIdle" value="${redis.maxIdle}"></property> 
	  <property name="minIdle" value="${redis.minIdle}"></property> 
	  <property name="maxTotal" value="${redis.maxTotal}"></property> 
	  <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"></property> 
	  <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"></property> 
	  <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"></property>
	 </bean> 
	 
	  <!-- 配置jedisConnectionFactory -->
	 <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy"> 
	  <property name="poolConfig" ref="jedisPoolConfig"></property> 
	  <property name="hostName" value="${redis.hostName}"></property> 
	  <property name="port" value="${redis.port}"></property> 
	  <property name="timeout" value="${redis.timeout}"></property> 
	  <property name="usePool" value="${redis.usePool}"></property>
	  <!-- <property name="password" value="${redis.pass}"></property>  -->
	 </bean> 
	<!-- 配置RedisTemplate -->
	 <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> 
	  <property name="connectionFactory" ref="jedisConnectionFactory"></property> 
	    <property name="keySerializer" >    
           	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />    
        </property>    
        <property name="valueSerializer" >    
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />    
        </property>    
        <property name="hashKeySerializer">    
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>    
        </property>    
        <property name="hashValueSerializer">    
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>    
        </property>
		<property name="enableTransactionSupport" value="true"/> 
	 </bean> 
	 
	   <!-- 配置RedisCacheManager -->
	  <!-- <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
	    <constructor-arg name="redisOperations" ref="redisTemplate"/>
	    <property name="defaultExpiration" value="0"/>
	  </bean> -->
	 
	  <!-- 配置RedisCacheConfig -->
	 <!--  <bean id="redisCacheConfig" class="com.rambo.sdh.common.util.RedisCacheConfig">
	    <constructor-arg ref="jedisConnectionFactory"/>
	    <constructor-arg ref="redisTemplate"/>
	    <constructor-arg ref="redisCacheManager"/>
	  </bean> -->
	 
</beans>